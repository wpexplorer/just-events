{"version":3,"file":"custom-fields.js","mappings":"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","sources":["webpack://just-events/./src/components/custom-fields.js","webpack://just-events/external window [\"wp\",\"components\"]","webpack://just-events/external window [\"wp\",\"compose\"]","webpack://just-events/external window [\"wp\",\"data\"]","webpack://just-events/external window [\"wp\",\"date\"]","webpack://just-events/external window [\"wp\",\"editPost\"]","webpack://just-events/external window [\"wp\",\"element\"]","webpack://just-events/external window [\"wp\",\"i18n\"]","webpack://just-events/external window [\"wp\",\"plugins\"]","webpack://just-events/webpack/bootstrap","webpack://just-events/webpack/runtime/compat get default export","webpack://just-events/webpack/runtime/define property getters","webpack://just-events/webpack/runtime/hasOwnProperty shorthand","webpack://just-events/webpack/runtime/make namespace object","webpack://just-events/./src/register-custom-fields.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { format as dateFormat } from '@wordpress/date';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post';\nimport { PanelRow, CheckboxControl, TextControl, DateTimePicker, Dropdown, Button } from '@wordpress/components';\n\nconst customFields = ( { postType, postMeta, setPostMeta } ) => {\n\n\tif ( 'just_event' !== postType ) {\n\t\treturn null;\n\t}\n\n\tlet showTime = true;\n\n\tconst setAllDayDate = ( startEnd, value ) => {\n\t\tlet theDate = '';\n\t\tlet theTime = '';\n\t\tif ( 'start' === startEnd ) {\n\t\t\tlet startDate = value || postMeta._just_events_start_date;\n\t\t\tif ( startDate ) {\n\t\t\t\ttheDate = dateFormat( 'Y-m-d', startDate );\n\t\t\t}\n\t\t\ttheTime = '00:00:00';\n\t\t} else {\n\t\t\tlet endDate = value || postMeta._just_events_end_date;\n\t\t\tif ( endDate ) {\n\t\t\t\ttheDate = dateFormat( 'Y-m-d', endDate );\n\t\t\t}\n\t\t\ttheTime = '23:59:00';\n\t\t}\n\t\tif ( ! theDate ) {\n\t\t\ttheDate = dateFormat( 'Y-m-d' );\n\t\t}\n\t\treturn `${theDate}T${theTime}`;\n\t};\n\n\tconst onAllDayChange = ( value ) => {\n\t\tsetPostMeta( { _just_events_all_day: value } );\n\t\tif ( value ) {\n\t\t\tsetPostMeta( { _just_events_start_date: setAllDayDate( 'start' ) } );\n\t\t\tsetPostMeta( { _just_events_end_date: setAllDayDate( 'end' ) } );\n\t\t}\n\t};\n\n\tconst onStartDateChange = ( value ) => {\n\t\tif ( undefined !== postMeta._just_events_all_day && postMeta._just_events_all_day ) {\n\t\t\tvalue = setAllDayDate( 'start', value );\n\t\t}\n\t\tsetPostMeta( { _just_events_start_date: value } );\n\n\t\tif ( ! postMeta._just_events_end_date || ( postMeta._just_events_start_date === postMeta._just_events_end_date ) ) {\n\t\t\t// @note we don't set the end date equal to the start but 11:59pm because then when they change the date it won't update.\n\t\t\tsetPostMeta( { _just_events_end_date: value } );\n\t\t}\n\t};\n\n\tconst onEndDateChange = ( value ) => {\n\t\tconst startDate = postMeta._just_events_start_date;\n\t\tif ( ! startDate ) {\n\t\t\treturn;\n\t\t} else if ( dateFormat( 'Y-m-d H:i:s', value ) < dateFormat( 'Y-m-d H:i:s', startDate ) ) {\n\t\t\tvalue = startDate;\n\t\t}\n\t\tif ( postMeta._just_events_all_day ) {\n\t\t\tvalue = setAllDayDate( 'end', value );\n\t\t}\n\t\tsetPostMeta( { _just_events_end_date: value } );\n\t};\n\n\treturn(\n\t\t<PluginDocumentSettingPanel \n\t\t\ttitle='Just Events'\n\t\t\ticon=\"calendar\"\n\t\t\tinitialOpen={ true }\n\t\t>\n\t\t\t{ undefined !== postMeta._just_events_all_day && (\n\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\tlabel={ __( 'All Day Event?', 'just-events' ) } \n\t\t\t\t\t\t\tonChange={ ( value ) => onAllDayChange( value ) }\n\t\t\t\t\t\t\tchecked={ postMeta._just_events_all_day }\n\t\t\t\t\t\t\thelp={ __( 'Enable to force the start and end times from 12:00am to 11:59pm.', 'just-events' ) } \n\t\t\t\t\t\t/>\n\t\t\t\t</PanelRow>\n\t\t\t) }\n\t\t\t<PanelRow>\n\t\t\t\t<span>\n \t\t\t\t\t{ __( 'Start Date', 'just-events' ) } \n \t\t\t\t</span>\n\t\t\t\t<Dropdown\n\t\t\t\t\tclassName=\"just-events-fields-dropdown-start-date\"\n\t\t\t\t\tpopoverProps={ { placement: 'left-middle' } }\n\t\t\t\t\trenderToggle={ ( ( { isOpen, onToggle } ) => (\n\t\t\t\t\t\t<Button isLink onClick={ onToggle } aria-expanded={ isOpen }>\n\t\t\t\t\t\t\t{ postMeta._just_events_start_date ? dateFormat( 'M j, Y g:i a', postMeta._just_events_start_date ) : __( 'Set Date', 'just-events' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) ) }\n\t\t\t\t\trenderContent={ () => (\n\t\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\t\tis12Hour={ true }\n\t\t\t\t\t\t\tcurrentDate={ postMeta._just_events_start_date }\n\t\t\t\t\t\t\tonChange={ ( newDate ) => onStartDateChange( newDate ) }\n\t\t\t\t\t\t\t__nextRemoveHelpButton\n\t\t\t\t\t\t\t__nextRemoveResetButton\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }>\n\t\t\t\t</Dropdown>\n\t\t\t</PanelRow>\n\t\t\t<PanelRow>\n\t\t\t\t<span>\n \t\t\t\t\t{ __( 'End Date', 'just-events' ) } \n \t\t\t\t</span>\n\t\t\t\t<Dropdown\n\t\t\t\t\tclassName=\"just-events-fields-dropdown-end-date\"\n\t\t\t\t\tpopoverProps={ { placement: 'left-middle' } }\n\t\t\t\t\trenderToggle={ ( ( { isOpen, onToggle } ) => (\n\t\t\t\t\t\t<Button isLink onClick={ onToggle } aria-expanded={ isOpen }>\n\t\t\t\t\t\t\t{ postMeta._just_events_end_date ? dateFormat( 'M j, Y g:i a', postMeta._just_events_end_date ) : __( 'Set Date', 'just-events' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) ) }\n\t\t\t\t\trenderContent={ () => (\n\t\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\t\tis12Hour={ true }\n\t\t\t\t\t\t\tcurrentDate={ postMeta._just_events_end_date }\n\t\t\t\t\t\t\tonChange={ ( newDate )  => onEndDateChange( newDate ) }\n\t\t\t\t\t\t\t__nextRemoveHelpButton\n\t\t\t\t\t\t\t__nextRemoveResetButton\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }>\n\t\t\t\t</Dropdown>\n\t\t\t</PanelRow>\n\t\t\t{ undefined !== postMeta._just_events_link && (\n\t\t\t\t<PanelRow>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'External Link', 'just-events' ) }\n\t\t\t\t\t\tvalue={ postMeta._just_events_link }\n\t\t\t\t\t\tonChange={ ( value ) => setPostMeta( { _just_events_link: value } ) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelRow>\n\t\t\t) }\n\t\t</PluginDocumentSettingPanel>\n\t);\n}\n\n// Fetch the post meta values\nconst applyWithSelect = withSelect( ( select ) => {\n\treturn {\n\t\tpostMeta: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n\t\tpostType: select( 'core/editor' ).getCurrentPostType()\n\t};\n} );\n\n// Update the post meta values\nconst applyWithDispatch = withDispatch( ( dispatch ) => {\n\treturn {\n\t\tsetPostMeta ( newValue ) {\n\t\t\tdispatch('core/editor').editPost( { meta: newValue } )\n\t\t}\n\t}\n} );\n\nexport default compose( [\n\tapplyWithSelect,\n\tapplyWithDispatch\n])(customFields);","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"date\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a plugin for adding items to the Gutenberg Toolbar.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/slotfills/plugin-sidebar/\n */\nimport { registerPlugin } from '@wordpress/plugins';\n\n/**\n * Internal dependencies.\n */\nimport CustomFields from './components/custom-fields';\n\nregisterPlugin( 'just-events-custom-fields', {\n    render: CustomFields\n} );\n"],"names":["__","format","dateFormat","compose","withSelect","withDispatch","PluginDocumentSettingPanel","PanelRow","CheckboxControl","TextControl","DateTimePicker","Dropdown","Button","customFields","postType","postMeta","setPostMeta","showTime","setAllDayDate","startEnd","value","theDate","theTime","startDate","_just_events_start_date","endDate","_just_events_end_date","onAllDayChange","_just_events_all_day","onStartDateChange","undefined","onEndDateChange","createElement","title","icon","initialOpen","label","onChange","checked","help","className","popoverProps","placement","renderToggle","isOpen","onToggle","isLink","onClick","renderContent","is12Hour","currentDate","newDate","__nextRemoveHelpButton","__nextRemoveResetButton","_just_events_link","applyWithSelect","select","getEditedPostAttribute","getCurrentPostType","applyWithDispatch","dispatch","newValue","editPost","meta","registerPlugin","CustomFields","render"],"sourceRoot":""}