{"version":3,"file":"editor.js","mappings":"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","sources":["webpack://just-events/./src/components/custom-fields.js","webpack://just-events/external window [\"wp\",\"components\"]","webpack://just-events/external window [\"wp\",\"compose\"]","webpack://just-events/external window [\"wp\",\"data\"]","webpack://just-events/external window [\"wp\",\"editPost\"]","webpack://just-events/external window [\"wp\",\"element\"]","webpack://just-events/external window [\"wp\",\"i18n\"]","webpack://just-events/external window [\"wp\",\"plugins\"]","webpack://just-events/webpack/bootstrap","webpack://just-events/webpack/runtime/compat get default export","webpack://just-events/webpack/runtime/define property getters","webpack://just-events/webpack/runtime/hasOwnProperty shorthand","webpack://just-events/webpack/runtime/make namespace object","webpack://just-events/./src/editor.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post';\nimport { PanelRow, TextControl, DateTimePicker } from '@wordpress/components';\n\nconst customFields = ( { postType, metaFields, setMetaFields } ) => {\n\n\tif ( 'just_event' !== postType ) {\n\t\treturn null;\n\t}\n\n\treturn(\n\t\t<PluginDocumentSettingPanel \n\t\t\ttitle={ __( 'Book details' ) } \n\t\t\ticon=\"book\"\n\t\t\tinitialOpen={ false }\n\t\t>\n\t\t\t<PanelRow>\n\t\t\t\t<TextControl \n\t\t\t\t\tvalue={ metaFields._meta_fields_book_title }\n\t\t\t\t\tlabel={ __( \"Title\" ) }\n\t\t\t\t\tonChange={ (value) => setMetaFields( { _meta_fields_book_title: value } ) }\n\t\t\t\t/>\n\t\t\t</PanelRow>\n\t\t\t<PanelRow>\n\t\t\t\t<TextControl \n\t\t\t\t\tvalue={ metaFields._meta_fields_book_author }\n\t\t\t\t\tlabel={ __( \"Author\" ) }\n\t\t\t\t\tonChange={ (value) => setMetaFields( { _meta_fields_book_author: value } ) }\n\t\t\t\t/>\n\t\t\t</PanelRow>\n\t\t\t<PanelRow>\n\t\t\t\t<TextControl \n\t\t\t\t\tvalue={ metaFields._meta_fields_book_publisher }\n\t\t\t\t\tlabel={ __( \"Publisher\" ) }\n\t\t\t\t\tonChange={ (value) => setMetaFields( { _meta_fields_book_publisher: value } ) }\n\t\t\t\t/>\n\t\t\t</PanelRow>\n\t\t\t<PanelRow>\n\t\t\t\t<DateTimePicker\n\t\t\t\t\tcurrentDate={ metaFields._meta_fields_book_date }\n\t\t\t\t\tonChange={ ( newDate ) => setMetaFields( { _meta_fields_book_date: newDate } ) }\n\t\t\t\t\t__nextRemoveHelpButton\n\t\t\t\t\t__nextRemoveResetButton\n\t\t\t\t/>\n\t\t\t</PanelRow>\n\t\t</PluginDocumentSettingPanel>\n\t);\n}\n\n// Fetch the post meta values\nconst applyWithSelect = withSelect( ( select ) => {\n\treturn {\n\t\tmetaFields: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n\t\tpostType: select( 'core/editor' ).getCurrentPostType()\n\t};\n} );\n\n// Update the post meta values\nconst applyWithDispatch = withDispatch( ( dispatch ) => {\n\treturn {\n\t\tsetMetaFields ( newValue ) {\n\t\t\tdispatch('core/editor').editPost( { meta: newValue } )\n\t\t}\n\t}\n} );\n\nexport default compose( [\n\tapplyWithSelect,\n\tapplyWithDispatch\n] )( customFields );","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a plugin for adding items to the Gutenberg Toolbar.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/slotfills/plugin-sidebar/\n */\nimport { registerPlugin } from '@wordpress/plugins';\n\n/**\n * Internal dependencies.\n */\nimport customFields from './components/custom-fields';\n\nregisterPlugin( 'just-events-custom-fields', {\n    render: CustomFields\n} );\n"],"names":["__","compose","withSelect","withDispatch","PluginDocumentSettingPanel","PanelRow","TextControl","DateTimePicker","customFields","postType","metaFields","setMetaFields","createElement","title","icon","initialOpen","value","_meta_fields_book_title","label","onChange","_meta_fields_book_author","_meta_fields_book_publisher","currentDate","_meta_fields_book_date","newDate","__nextRemoveHelpButton","__nextRemoveResetButton","applyWithSelect","select","getEditedPostAttribute","getCurrentPostType","applyWithDispatch","dispatch","newValue","editPost","meta","registerPlugin","render","CustomFields"],"sourceRoot":""}